@using Vekalat.UI.Areas.admin.ViewModels.TeamGalleryViewModels;
@model TeamGalleryViewModel

@{
    ViewData["Title"] = "Gallery";
}


<div class="card mb-4">
    <div class="row">
        <div class="col-5"><h5 class="card-header">Search @ViewData["Title"]</h5></div>
        <div class="col-2"></div>
        <div class="col-5 text-end">
            @if (Model.Filter.TeamId != null)
            {
                <a href="javascript:void(0)" onclick="Create(@Model.Filter.TeamId)" class="btn btn-info mx-4 mt-4">Add Image</a>
            }
        </div>
    </div>


    <form method="get" asp-action="Index" id="subForm">
        <div class="card-body">
            <div class="row gx-3 gy-2 align-items-center">
                <input type="hidden" name="PageId" id="pageId" value="1" />
                <input type="hidden" asp-for="Filter.Take" name="Take" />
                <div class="col-md-4">
                    <label class="form-label" for="basic-icon-default-fullname">Team Title</label>
                    <div class="input-group input-group-merge">
                        <span id="basic-icon-default-fullname2" class="input-group-text">
                            <i class="bx bx-search"></i>
                        </span>
                        <input type="text" asp-for="Filter.SearchFilter" name="SearchFilter"
                               class="form-control"
                               id="basic-icon-default-fullname"
                               placeholder="search title"
                               aria-label="John Doe"
                               aria-describedby="basic-icon-default-fullname2" />
                    </div>
                </div>
                <div class="col-md-3">
                    <label class="form-label" for="showToastPlacement">&nbsp;</label>
                    <button type="submit" id="showToastPlacement" class="btn btn-primary d-block">Search</button>
                </div>
            </div>
        </div>
    </form>
</div>

<div class="card">
    <div class="table-responsive text-nowrap " style="min-height: 30vh">
        <table class="table">
            <thead>
                <tr>
                    @*                    <th>Image</th>*@
                    <th>Id</th>
                    <th>Image</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody class="table-border-bottom-0">
                @if (Model.PagingHandler.Items.Any())
                {
                    @foreach (var item in Model.PagingHandler.Items)
                    {
                        <tr id="table_@item.Id">
                            <td>
                                @item.Id
                            </td>
                            <td>
                                <img src="/images/TeamGallery-images/thumbnail/@item.Imagename" style="max-width:120px">
                            </td>
                            <td>
                                <div class="dropdown">
                                    <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                        <i class="bx bx-dots-vertical-rounded"></i>
                                    </button>
                                    <div class="dropdown-menu">
                                        <a class="dropdown-item" href="#" onclick="Delete(@item.Id)"><i class="bx bx-trash me-1"></i> Delete</a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td>
                            <p class="text-danger">No Record Found!</p>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>


<div class="card my-4 p-2">
    <div class="d-flex">
        @if (Model.PagingHandler.PageCount > 1)
        {
            <nav class="custom-pagination" aria-label="Page navigation example">
                <ol class="pagination" reversed="reversed">

                    <li class="page-item @(Model.PagingHandler.ActivePage <= 1 ? "disabled" : "") ">
                        <a onclick="ArrowPage(-1)" class="page-link" href="javascript:void(0)" aria-label="Previous">
                            <span aria-hidden="true">«</span>
                        </a>
                    </li>
                    @for (int counter = Model.PagingHandler.StartPage; counter <= Model.PagingHandler.EndPage; counter++)
                    {
                        <li class="page-item @(Model.PagingHandler.ActivePage == counter ? "active" : "")"><a onclick="SetPage(@counter)" class="page-link" href="javascript:void(0)">@counter</a></li>
                    }

                    <li class="page-item @(Model.PagingHandler.EndPage <= Model.PagingHandler.ActivePage ? "disabled" : "")">
                        <a onclick="ArrowPage(1)" class="page-link" href="javascript:void(0)" aria-label="Next">
                            <span aria-hidden="true">»</span>
                        </a>
                    </li>

                </ol>
            </nav>
        }
        <div class="col-md-2 col-12 mx-3">
            <Select onchange="changeTake(this)" asp-for="Filter.Take" class="form-control">
                <option value=10>10</option>
                <option value=30>30</option>
                <option value=50>50</option>
                <option value=80>80</option>
                <option value=100>100</option>
            </Select>
        </div>
    </div>
</div>


<div class="modal fade" id="myModal" data-bs-backdrop="static" tabindex="-1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="myModalBody">
            </div>
        </div>
    </div>
</div>

@section Scripts
    {
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        function Create(TeamId) {
            Loader.open();
            $.get('@Url.Action("Create")/' + TeamId,
                function (result) {
                    $("#myModal").modal('toggle');
                    $("#myModalLabel").html("new image");
                    $("#myModalBody").html(result);
                    Loader.close();

                });
        }

        function Edit(id) {
            Loader.open();

            $.get('@Url.Action("Edit")/' + id,
                function (result) {
                    $("#myModal").modal('toggle');
                    $("#myModalLabel").html("edit image");
                    $("#myModalBody").html(result);
                    Loader.close();

                });
        }

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success ',
                cancelButton: 'btn btn-danger ml-3'
            },
            buttonsStyling: false
        });

        function Delete(id) {
            event.preventDefault();
            swalWithBootstrapButtons.fire({
                title: 'Are you sure to delete?',
                text: "It is not possible to restore a deleted record",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Delete',
                cancelButtonText: 'Return',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    var btnId = id;

                    $.ajax({
                        type: "DELETE",
                        url: '@Url.Action("Delete")',
                        data: { id: btnId },
                        success: (response) => {
                            debugger;
                            if (response.status === 200) {
                                swalWithBootstrapButtons.fire(
                                    'Record Deleted',
                                    '',
                                    'success'
                                );
                                $("#table_" + id).fadeOut();
                            }
                            else {
                                swalWithBootstrapButtons.fire(
                                    'error',
                                    response.message,
                                    'error'
                                );
                            }
                        },
                        error: (e) => {
                            swalWithBootstrapButtons.fire(
                                'error',
                                e.message,
                                'error'
                            );
                        }
                    });
                }
            });
        };

    </script>
    <script>
        function changeTake(e) {
            $("#pageId").val(1);
            $("#Filter_Take").val($(e).val());
            $("#subForm").submit();
        }
        function ArrowPage(pageId) {
            var currentPage = @Model.PagingHandler.ActivePage;
            currentPage += pageId;
            SetPage(currentPage);
        }
        function SetPage(id) {
            $("#pageId").val(id);
            $("#subForm").submit();
        }
    </script>
}